---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-flannel
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-flannel-cfg
  namespace: kube-flannel
  labels:
    app: kube-flannel
data:
  cni-conf.json: |
    {
      "name": "cbr0",
      "cniVersion": "0.3.1",
      "plugins": [
        {
          "type": "flannel",
          "delegate": {
            "hairpinMode": true,
            "isDefaultGateway": true
          }
        },
        {
          "type": "portmap",
          "capabilities": {
            "portMappings": true
          }
        }
      ]
    }
  net-conf.json: |
    {
      "Network": "10.244.0.0/16",
      "Backend": {
        "Type": "vxlan"
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flannel
  namespace: kube-flannel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flannel
rules:
  - apiGroups: [""]
    resources:
      - pods
      - nodes
      - nodes/status
    verbs:
      - get
      - list
      - watch
  - apiGroups: ["networking.k8s.io"]
    resources:
      - clustercidrs
      - clustercidrs/status
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flannel
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flannel
subjects:
  - kind: ServiceAccount
    name: flannel
    namespace: kube-flannel
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kube-flannel-ds
  namespace: kube-flannel
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: kube-flannel
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-flannel-ds
  namespace: kube-flannel
  labels:
    app: kube-flannel
spec:
  selector:
    matchLabels:
      app: kube-flannel
  template:
    metadata:
      labels:
        app: kube-flannel
    spec:
      tolerations:
        - operator: Exists
      serviceAccountName: flannel
      hostNetwork: true
      containers:
        - name: kube-flannel
          image: docker.io/flannel/flannel:v0.22.3
          command:
            - /opt/bin/flanneld
            - --ip-masq
            - --kube-subnet-mgr
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            privileged: true
          volumeMounts:
            - name: run
              mountPath: /run
            - name: flannel-cfg
              mountPath: /etc/kube-flannel/
            - name: xtables-lock
              mountPath: /run/xtables.lock
      initContainers:
        - name: install-cni-plugin
          image: docker.io/flannel/flannel-cni-plugin:v1.2.0
          command:
            - /bin/sh
            - -c
            - |
              set -e
              for bin in flannel portmap bandwidth; do
                if [ -f "/opt/cni/bin/${bin}" ]; then
                  cp -f "/opt/cni/bin/${bin}" "/host/opt/cni/bin/${bin}"
                fi
              done
          volumeMounts:
            - name: cni-plugin
              mountPath: /host/opt/cni/bin
        - name: prepare-cni-netconf
          image: docker.io/flannel/flannel:v0.22.3
          command:
            - /bin/sh
            - -c
            - |
              set -e
              cp -f /etc/kube-flannel/cni-conf.json /host/etc/cni/net.d/10-flannel.conflist
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: flannel-cfg
              mountPath: /etc/kube-flannel/
      volumes:
        - name: run
          hostPath:
            path: /run
        - name: cni-plugin
          hostPath:
            path: /opt/cni/bin
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: flannel-cfg
          configMap:
            name: kube-flannel-cfg
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
