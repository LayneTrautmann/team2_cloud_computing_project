---
- name: Deploy extended data pipeline workloads onto Kubernetes
  hosts: "{{ groups['kafka_broker'][0] }}"
  become: true
  gather_facts: yes

  vars:
    manifest_dir: /tmp/pipeline-manifests
    k8s_namespace: pipeline
    registry_port: 5000
    registry_host: "{{ hostvars[inventory_hostname].private_ip | default(ansible_default_ipv4.address) }}"
    registry: "{{ registry_host }}:{{ registry_port }}"
    image_tag: dev
    publisher_jobs_file: k8s/publisher-jobs.yml
    publisher_jobs: "{{ (lookup('file', publisher_jobs_file) | from_yaml) | default([], true) }}"
    publisher_profile_file: k8s/publisher-profile.json
    publisher_profile_content: "{{ lookup('file', publisher_profile_file) }}"
    publisher_defaults:
      source: k8s-job
      log_every: 25
      topic_mode: shared
      rate_multiplier: 1.0
      key_strategy: sensor
      duration_sec: 180
      parallelism: 1
      backoff_limit: 3
    consumer_deployment_name: consumer-svc
    consumer_replicas: 2
    consumer_topics: ["weather", "airquality", "power"]
    consumer_group_id: k8s-consumers
    consumer_post_timeout: "5"
    consumer_post_backoff: "1.0"
    flask_deployment_name: flask-web
    flask_service_name: flask-web
    flask_replicas: 2
    flask_container_port: 5000
    flask_gunicorn_workers: 2
    flask_nodeport: 32000
    mongo_db: sensors
    kafka_bootstrap: "{{ groups['kafka_broker'] | map('extract', hostvars, 'private_ip') | map('regex_replace', '^(.+)$', '\\1:9092') | join(',') }}"
    mongo_uri: "mongodb://sensorapp:CHANGE_ME_STRONG_PASSWORD@{{ hostvars['team2_vm5'].private_ip }}:27017/{{ mongo_db }}?authSource={{ mongo_db }}"
    flask_service_internal_url: "http://{{ flask_service_name }}.{{ k8s_namespace }}.svc.cluster.local:{{ flask_container_port }}/update_data"

  tasks:
    - name: Ensure manifest staging directory exists
      file:
        path: "{{ manifest_dir }}"
        state: directory
        mode: "0755"

    - name: Render Kubernetes namespace manifest
      template:
        src: templates/k8s/namespace.yaml.j2
        dest: "{{ manifest_dir }}/00-namespace.yaml"

    - name: Render publisher profile configmap
      template:
        src: templates/k8s/publisher-profile-configmap.yaml.j2
        dest: "{{ manifest_dir }}/01-publisher-profile.yaml"

    - name: Render publisher job manifest
      template:
        src: templates/k8s/publisher-job.yaml.j2
        dest: "{{ manifest_dir }}/02-{{ item.name }}.yaml"
      loop: "{{ publisher_jobs }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Collect publisher job manifest paths
      set_fact:
        publisher_job_manifests: "{{ (publisher_job_manifests | default([])) + [manifest_dir ~ '/02-' ~ item.name ~ '.yaml'] }}"
      loop: "{{ publisher_jobs }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Recreate publisher jobs to avoid immutable template errors
      command: kubectl delete job {{ item.name }} -n {{ k8s_namespace }} --ignore-not-found --kubeconfig /etc/kubernetes/admin.conf
      loop: "{{ publisher_jobs }}"
      loop_control:
        label: "{{ item.name }}"
      when: publisher_jobs | length > 0

    - name: Render consumer deployment manifest
      template:
        src: templates/k8s/consumer-deployment.yaml.j2
        dest: "{{ manifest_dir }}/03-consumer-deployment.yaml"

    - name: Render flask deployment manifest
      template:
        src: templates/k8s/flask-deployment.yaml.j2
        dest: "{{ manifest_dir }}/04-flask-deployment.yaml"

    - name: Render flask service manifest
      template:
        src: templates/k8s/flask-service.yaml.j2
        dest: "{{ manifest_dir }}/05-flask-service.yaml"

    - name: Build manifest apply order
      set_fact:
        manifest_apply_order: >-
          {{
            [manifest_dir ~ '/00-namespace.yaml',
             manifest_dir ~ '/01-publisher-profile.yaml'] +
            (publisher_job_manifests | default([])) +
            [manifest_dir ~ '/03-consumer-deployment.yaml',
             manifest_dir ~ '/04-flask-deployment.yaml',
             manifest_dir ~ '/05-flask-service.yaml']
          }}

    - name: Apply Kubernetes manifests in order
      command: kubectl apply -f {{ item }} --kubeconfig /etc/kubernetes/admin.conf
      loop: "{{ manifest_apply_order }}"
