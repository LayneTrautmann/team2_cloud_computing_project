---
- name: Build and push pipeline Docker images to private registry
  hosts: "{{ groups['kafka_broker'][0] }}"
  become: true
  gather_facts: yes

  vars:
    registry_port: 5000
    registry_host: "{{ hostvars[inventory_hostname].private_ip | default(ansible_default_ipv4.address) }}"
    registry: "{{ registry_host }}:{{ registry_port }}"
    image_tag: latest
    build_root: /opt/pipeline-images
    components:
      - name: publisher
        context: docker/publisher
        script: publisher.py
      - name: consumer
        context: docker/consumer
        script: consumer.py
      - name: flask
        context: docker/flask
        script: flask_server.py

  tasks:
    - name: Ensure build root exists
      file:
        path: "{{ build_root }}"
        state: directory
        mode: "0755"

    - name: Ensure context directory exists
      file:
        path: "{{ build_root }}/{{ component.name }}"
        state: directory
        mode: "0755"
      loop: "{{ components }}"
      loop_control:
        loop_var: component

    - name: Copy Docker context files (Dockerfile + requirements)
      copy:
        src: "{{ component.context }}/"
        dest: "{{ build_root }}/{{ component.name }}/"
        mode: "0644"
      loop: "{{ components }}"
      loop_control:
        loop_var: component

    - name: Copy application source into build context
      copy:
        src: "{{ component.script }}"
        dest: "{{ build_root }}/{{ component.name }}/{{ component.script | basename }}"
        mode: "0644"
      loop: "{{ components }}"
      loop_control:
        loop_var: component

    - name: Build and push images to registry
      community.docker.docker_image:
        name: "{{ registry }}/{{ item.name }}"
        tag: "{{ image_tag }}"
        push: true
        source: build
        build:
          path: "{{ build_root }}/{{ item.name }}"
      loop: "{{ components }}"
