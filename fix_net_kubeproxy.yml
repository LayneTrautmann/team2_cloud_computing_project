---
- name: Fix kernel networking + restart kube-proxy; nuke bad CoreDNS
  hosts: kafka_cluster
  become: true
  gather_facts: yes

  vars:
    kubeconfig: /etc/kubernetes/admin.conf

  tasks:
    # --- Ensure br_netfilter loads now and on reboot ---
    - name: Ensure br_netfilter is present now
      modprobe:
        name: br_netfilter
        state: present

    - name: Persist br_netfilter across reboots
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
        mode: "0644"

    # --- Persist the kube networking sysctls ---
    - name: Write /etc/sysctl.d/99-kubernetes.conf
      copy:
        dest: /etc/sysctl.d/99-kubernetes.conf
        mode: "0644"
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1

    - name: Apply sysctl config
      command: sysctl --system
      changed_when: false

- name: Roll kube-proxy and clean CoreDNS
  hosts: "{{ groups['kafka_broker'][0] }}"   # run kubectl once from vm1
  become: true
  gather_facts: no

  tasks:
    - name: Show current kube-proxy pods (pre)
      command: kubectl -n kube-system get pods -l k8s-app=kube-proxy -o wide --kubeconfig /etc/kubernetes/admin.conf
      changed_when: false
      register: kp_pre

    - debug:
        var: kp_pre.stdout

    - name: Restart kube-proxy DaemonSet
      command: kubectl -n kube-system rollout restart ds/kube-proxy --kubeconfig /etc/kubernetes/admin.conf

    - name: Wait for kube-proxy to be Ready on all nodes (3m)
      command: kubectl -n kube-system rollout status ds/kube-proxy --timeout=180s --kubeconfig /etc/kubernetes/admin.conf
      changed_when: false

    - name: Delete non-Ready CoreDNS pods to force reschedule
      shell: >
        kubectl -n kube-system get pods -l k8s-app=kube-dns
        --field-selector=status.phase!=Running
        -o name --kubeconfig {{ kubeconfig }} | xargs -r kubectl -n kube-system delete --kubeconfig {{ kubeconfig }}
      changed_when: true

    - name: Wait for coredns deployment to become Available (2m)
      command: kubectl -n kube-system rollout status deploy/coredns --timeout=120s --kubeconfig /etc/kubernetes/admin.conf
      changed_when: false

    - name: Show status after fixes
      shell: |
        kubectl get nodes -o wide --kubeconfig {{ kubeconfig }}
        kubectl -n kube-system get pods -o wide --kubeconfig {{ kubeconfig }}
        kubectl -n kube-flannel get ds,pods -o wide --kubeconfig {{ kubeconfig }}
      changed_when: false
      register: after

    - debug:
        var: after.stdout
